#!/usr/bin/env bash

# macOS configuration
#
# This configuration is based on
# https://github.com/geerlingguy/dotfiles/blob/master/.osx
#
# Options:
#   --no-restart: Don't restart any apps or services after running the script.
#
# @see: http://secrets.blacktree.com/?showapp=com.apple.finder
#
# @author Jeff Geerling, 2014
# @author Hidetoshi Hirokawa, 2021

# Warn that some commands will not be run if the script is not run as root.
if [[ $EUID -ne 0 ]]; then
  RUN_AS_ROOT=false
  SUDO_USER=$USER
  printf "Certain commands will not be run without sudo privileges. To run as root, run the same command prepended with 'sudo', for example: $ sudo $0\n\n" | fold -s -w 80
else
  RUN_AS_ROOT=true
  # Update existing `sudo` timestamp until `.osx` has finished
  while true; do sudo -n true; sleep 60; kill -0 "$$" || exit; done 2>/dev/null &
fi

###############################################################################
# General UI/UX                                                               #
###############################################################################

# Expand save panel by default
sudo -u $SUDO_USER defaults write NSGlobalDomain NSNavPanelExpandedStateForSaveMode -bool true

# Expand print panel by default
sudo -u $SUDO_USER defaults write NSGlobalDomain PMPrintingExpandedStateForPrint -bool true

# Save to iCloud by default
sudo -u $SUDO_USER defaults write NSGlobalDomain NSDocumentSaveNewDocumentsToCloud -bool true

# Automatically quit printer app once the print jobs complete
sudo -u $SUDO_USER defaults write com.apple.print.PrintingPrefs "Quit When Finished" -bool true

# Reveal IP address, hostname, OS version, etc. when clicking the clock
# in the login window
if [[ "$RUN_AS_ROOT" = true ]]; then
  sudo defaults write /Library/Preferences/com.apple.loginwindow AdminHostInfo HostName
fi

# Restart automatically if the computer freezes
if [[ "$RUN_AS_ROOT" = true ]]; then
  systemsetup -setrestartfreeze on
fi

# Disable game center. Who uses that thing?
sudo -u $SUDO_USER launchctl unload /System/Library/LaunchAgents/com.apple.gamed.plist 2> /dev/null

# Disable smart quotes as they’re annoying when typing code
sudo -u $SUDO_USER defaults write NSGlobalDomain NSAutomaticQuoteSubstitutionEnabled -bool false

# Disable smart dashes as they’re annoying when typing code
sudo -u $SUDO_USER defaults write NSGlobalDomain NSAutomaticDashSubstitutionEnabled -bool false

###############################################################################
# SSD-specific tweaks                                                         #
###############################################################################

if [[ "$RUN_AS_ROOT" = true ]]; then
  # Disable the sudden motion sensor as it’s not useful for SSDs
  sudo pmset -a sms 0
fi

###############################################################################
# Trackpad, mouse, keyboard, Bluetooth accessories, and input                 #
###############################################################################

# Disable press-and-hold for keys in favor of key repeat
sudo -u $SUDO_USER defaults write NSGlobalDomain ApplePressAndHoldEnabled -bool false

# Set a blazingly fast keyboard repeat rate, and make it happen more quickly.
sudo -u $SUDO_USER defaults write NSGlobalDomain InitialKeyRepeat -int 15
sudo -u $SUDO_USER defaults write NSGlobalDomain KeyRepeat -int 1

# Disable auto-correct
sudo -u $SUDO_USER defaults write NSGlobalDomain NSAutomaticSpellingCorrectionEnabled -bool false

###############################################################################
# Screen                                                                      #
###############################################################################

# Require password immediately after sleep or screen saver begins
sudo -u $SUDO_USER defaults write com.apple.screensaver askForPassword -int 1
sudo -u $SUDO_USER defaults write com.apple.screensaver askForPasswordDelay -int 0

# Save screenshots to the desktop
sudo -u $SUDO_USER defaults write com.apple.screencapture location -string "${HOME}/Desktop"

# Save screenshots in PNG format (other options: BMP, GIF, JPG, PDF, TIFF)
sudo -u $SUDO_USER defaults write com.apple.screencapture type -string "png"

# Disable shadow in screenshots
sudo -u $SUDO_USER defaults write com.apple.screencapture disable-shadow -bool true

###############################################################################
# Finder                                                                      #
###############################################################################

# Set Desktop as the default location for new Finder windows
# For other paths, use `PfLo` and `file:///full/path/here/`
sudo -u $SUDO_USER defaults write com.apple.finder NewWindowTarget -string "PfDe"
sudo -u $SUDO_USER defaults write com.apple.finder NewWindowTargetPath -string "file://${HOME}/Desktop/"

# Show icons for hard drives, servers, and removable media on the desktop
sudo -u $SUDO_USER defaults write com.apple.finder ShowExternalHardDrivesOnDesktop -bool true
sudo -u $SUDO_USER defaults write com.apple.finder ShowHardDrivesOnDesktop -bool true
sudo -u $SUDO_USER defaults write com.apple.finder ShowMountedServersOnDesktop -bool true
sudo -u $SUDO_USER defaults write com.apple.finder ShowRemovableMediaOnDesktop -bool true

# Finder: show hidden files by default
sudo -u $SUDO_USER defaults write com.apple.finder AppleShowAllFiles -bool true

# Finder: show all filename extensions
sudo -u $SUDO_USER defaults write NSGlobalDomain AppleShowAllExtensions -bool true

# Finder: show status bar
sudo -u $SUDO_USER defaults write com.apple.finder ShowStatusBar -bool true

# Finder: show path bar
# defaults write com.apple.finder ShowPathbar -bool true

# Finder: allow text selection in Quick Look
sudo -u $SUDO_USER defaults write com.apple.finder QLEnableTextSelection -bool true

# Display full POSIX path as Finder window title
# defaults write com.apple.finder _FXShowPosixPathInTitle -bool true

# When performing a search, search the current folder by default
sudo -u $SUDO_USER defaults write com.apple.finder FXDefaultSearchScope -string "SCcf"

# Disable the warning when changing a file extension
sudo -u $SUDO_USER defaults write com.apple.finder FXEnableExtensionChangeWarning -bool false

# Enable spring loading for directories
sudo -u $SUDO_USER defaults write NSGlobalDomain com.apple.springing.enabled -bool true

# Remove the spring loading delay for directories
sudo -u $SUDO_USER defaults write NSGlobalDomain com.apple.springing.delay -float 0.1

# Avoid creating .DS_Store files on network volumes
sudo -u $SUDO_USER defaults write com.apple.desktopservices DSDontWriteNetworkStores -bool true

# Automatically open a new Finder window when a volume is mounted
sudo -u $SUDO_USER defaults write com.apple.frameworks.diskimages auto-open-ro-root -bool true
sudo -u $SUDO_USER defaults write com.apple.frameworks.diskimages auto-open-rw-root -bool true
sudo -u $SUDO_USER defaults write com.apple.finder OpenWindowForNewRemovableDisk -bool true

# Enable snap-to-grid for icons on the desktop and in other icon views
sudo -u $SUDO_USER /usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist
sudo -u $SUDO_USER /usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist
sudo -u $SUDO_USER /usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:arrangeBy grid" ~/Library/Preferences/com.apple.finder.plist

# Set the size of icons on the desktop and in other icon views
sudo -u $SUDO_USER /usr/libexec/PlistBuddy -c "Set :DesktopViewSettings:IconViewSettings:iconSize 64" ~/Library/Preferences/com.apple.finder.plist
sudo -u $SUDO_USER /usr/libexec/PlistBuddy -c "Set :FK_StandardViewSettings:IconViewSettings:iconSize 64" ~/Library/Preferences/com.apple.finder.plist
sudo -u $SUDO_USER /usr/libexec/PlistBuddy -c "Set :StandardViewSettings:IconViewSettings:iconSize 64" ~/Library/Preferences/com.apple.finder.plist

# Use column view in all Finder windows by default
# Four-letter codes for the other view modes: `icnv`, `Nlsv`, `clmv`, `Flwv`
sudo -u $SUDO_USER defaults write com.apple.finder FXPreferredViewStyle -string "clmv"

# Disable the warning before emptying the Trash
# defaults write com.apple.finder WarnOnEmptyTrash -bool false

# Empty Trash securely by default
# defaults write com.apple.finder EmptyTrashSecurely -bool true

# Show the ~/Library folder
sudo -u $SUDO_USER chflags nohidden ~/Library

# Expand the following File Info panes:
# “General”, “Open with”, and “Sharing & Permissions”
sudo -u $SUDO_USER defaults write com.apple.finder FXInfoPanesExpanded -dict \
  General -bool true \
  OpenWith -bool true \
  Preview -bool false \
  Privileges -bool true

###############################################################################
# Dock, Dashboard, and hot corners                                            #
###############################################################################

# Set the icon size of Dock items
sudo -u $SUDO_USER defaults write com.apple.dock tilesize -int 53

# Speed up Mission Control animations
sudo -u $SUDO_USER defaults write com.apple.dock expose-animation-duration -float 0.15

# Automatically hide and show the Dock
sudo -u $SUDO_USER defaults write com.apple.dock autohide -bool true

# Make Dock icons of hidden applications translucent
sudo -u $SUDO_USER defaults write com.apple.dock showhidden -bool true

###############################################################################
# Safari & WebKit                                                             #
###############################################################################

# Set Safari’s home page to `about:blank` for faster loading
sudo -u $SUDO_USER defaults write com.apple.Safari HomePage -string "about:blank"

# Prevent Safari from opening ‘safe’ files automatically after downloading
sudo -u $SUDO_USER defaults write com.apple.Safari AutoOpenSafeDownloads -bool false

# Enable Safari’s debug menu
sudo -u $SUDO_USER defaults write com.apple.Safari IncludeInternalDebugMenu -bool true

# Enable the Develop menu and the Web Inspector in Safari
sudo -u $SUDO_USER defaults write com.apple.Safari IncludeDevelopMenu -bool true
defaults write com.apple.Safari WebKitDeveloperExtrasEnabledPreferenceKey -bool true
sudo -u $SUDO_USER defaults write com.apple.Safari com.apple.Safari.ContentPageGroupIdentifier.WebKit2DeveloperExtrasEnabled -bool true

# Add a context menu item for showing the Web Inspector in web views
sudo -u $SUDO_USER defaults write NSGlobalDomain WebKitDeveloperExtras -bool true

###############################################################################
# Spotlight                                                                   #
###############################################################################

if [[ "$RUN_AS_ROOT" = true ]]; then
  # Disable Spotlight indexing for any volume that gets mounted and has not yet
  # been indexed before.
  # Use `sudo mdutil -i off "/Volumes/foo"` to stop indexing any volume.
  sudo defaults write /.Spotlight-V100/VolumeConfiguration Exclusions -array "/Volumes"

  # Restart spotlight
  killall mds > /dev/null 2>&1
fi

###############################################################################
# Activity Monitor                                                            #
###############################################################################

# Show the main window when launching Activity Monitor
sudo -u $SUDO_USER defaults write com.apple.ActivityMonitor OpenMainWindow -bool true

# Use default App Icon in the Activity Monitor Dock icon
sudo -u $SUDO_USER defaults write com.apple.ActivityMonitor IconType -int 0

# Show all processes in Activity Monitor
sudo -u $SUDO_USER defaults write com.apple.ActivityMonitor ShowCategory -int 0

###############################################################################
# TextEdit                                                                    #
###############################################################################

# Use plain text mode for new TextEdit documents
sudo -u $SUDO_USER defaults write com.apple.TextEdit RichText -int 0

# Select encoding automatically on open and save files
sudo -u $SUDO_USER defaults write com.apple.TextEdit PlainTextEncoding -int 0
sudo -u $SUDO_USER defaults write com.apple.TextEdit PlainTextEncodingForWrite -int 0

###############################################################################
# fish shell                                                                  #
###############################################################################

if [[ "$RUN_AS_ROOT" = true ]]; then
  # Insert fish to /etc/shells
  if ! grep -q /usr/local/bin/fish /etc/shells; then
    echo /usr/local/bin/fish | sudo tee -a /etc/shells
  fi

  # Set fish to default shell
  sudo chsh -s /usr/local/bin/fish $SUDO_USER
fi

# Install fisher
sudo -u $SUDO_USER fish -c "curl -sL https://git.io/fisher | source && fisher update"

# Update completions
sudo -u $SUDO_USER fish -c "fish_update_completions"

###############################################################################
# iTerm                                                                       #
###############################################################################

# Link dynamic profile file
sudo -u $SUDO_USER ln -fs ~/.config/iterm2/profiles.json ~/Library/Application\ Support/iTerm2/DynamicProfiles/profiles.json

# Set default theme to Dracula
sudo -u $SUDO_USER defaults write com.googlecode.iterm2 "Default Bookmark Guid" -string Dracula

###############################################################################
# Visual Studio Code                                                          #
###############################################################################

# Install im-select
curl -Ls https://raw.githubusercontent.com/daipeihust/im-select/master/install_mac.sh | sudo -u $SUDO_USER sh

###############################################################################
# Kill/restart affected applications                                          #
###############################################################################

# Restart affected applications if `--no-restart` flag is not present.
if [[ ! ($* == *--no-restart*) ]]; then
  for app in "cfprefsd" "Dock" "Finder" "Mail" "SystemUIServer" "Terminal"; do
    killall "${app}" > /dev/null 2>&1
  done
fi

printf "Please log out and log back in to make all settings take effect.\n"
